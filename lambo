#!/usr/bin/env bash

## Set up colors
red=`tput setaf 1`
green=`tput setaf 2`
orange=`tput setaf 3`
reset=`tput sgr0`

## Init functions
showhelp()
{
    echo " "
    echo "${green}Lambo: Super-powered '${orange}laravel new${green}' for Laravel and Valet"
    echo "${reset}________________________________________________________"
    echo " "
    echo "${orange}Usage:"
    echo "${reset}  lambo myApplication [arguments]"
    echo " "
    echo "${orange}Options:"
    echo "${green}  -h, --help${reset}                 Show brief help"
    echo "${green}  -e, --editor EDITOR${reset}        Specify an editor to run '${green}EDITOR .${reset}' with after"
    echo "${green}  -m, --message \"message\"${reset}    Customize the initial commit message"
    echo "${green}  -p, --path PATH${reset}            Customize the path in which the new project will be created"
    echo "${green}  -d, --dev${reset}                  Use Composer to install on the develop branch"
    echo "${green}  -a, --auth${reset}                 Use Artisan to scaffold all of the routes and views you need for authentication"
    echo "${green}  -n, --node${reset}                 Runs '${green}yarn${reset}' if installed, otherwise runs '${green}npm install${reset}' after creating the project"
    quit
}

abort()
{
    echo >&2 '
***********************************************
*** There was an error running this script. ***
***********************************************
'
    echo "An error occurred. Exiting..." >&2
    exit 1
}

quit()
{
    trap : 0
    exit 0
}

## Set up error handling
trap 'abort' 0

## Start script

PROJECTNAME=$1
PROJECTPATH="."
MESSAGE="Initial commit."
DEVELOP=false
AUTH=false
NODE=false
EDITOR=""
TLD=$(php -r "echo json_decode(file_get_contents('$HOME/.valet/config.json'))->domain;")

### Check for project name argument; if none passed, show help
if [ $# -eq 0 ]
    then
        showhelp
fi

### Handle arguments
while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        -h|--help)
            showhelp
            ;;
        -p|--path)
            PROJECTPATH="$2"
            shift
            ;;
        -m|--message)
            MESSAGE="$2"
            shift
            ;;
        -e|--editor)
            EDITOR="$2"
            shift
            ;;
        -d|--develop|--dev)
            DEVELOP=true
            ;;
        -a|--auth)
            AUTH=true
            ;;
        -n|--node)
            NODE=true
            ;;
        *)
            ;;
    esac

    shift
done

echo "
***********************************************
Creating new Laravel app ${green}$PROJECTNAME${reset}
***********************************************
"

cd $PROJECTPATH
if [ "$DEVELOP" = true ]
then
    laravel new $PROJECTNAME --dev
else
    laravel new $PROJECTNAME
fi
cd "$PROJECTNAME"

if [ "$NODE" = true ]
then
    # check if yarn is executable, otherwise use npm
    if hash yarn 2>/dev/null
    then
        yarn
    else
        npm install
    fi
fi

if [ "$AUTH" = true ]
then
    php artisan make:auth
fi

git init
git add .
git commit -m "$MESSAGE"

if [ "$EDITOR" != "" ]
then
    $EDITOR .
fi

# Update .env to point to this database with `root` username and blank pw,
# like Mac MySQL defaults, and appropriate domain
PROJECTURL="http://$PROJECTNAME.$TLD"
sedCommands=(
    "/DB_DATABASE/s/homestead/$PROJECTNAME/"
    '/DB_USERNAME/s/homestead/root/'
    '/DB_PASSWORD/s/secret/root/'
    "/APP_URL/s/localhost/$PROJECTNAME\.$TLD/"
)

if [ "$(uname)" == "Darwin" ]; then
    for sedCommand in "${sedCommands[@]}"
    do
        sed -i '' $sedCommand .env
    done
    open $PROJECTURL
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
    for sedCommand in "${sedCommands[@]}"
    do
        sed -i $sedCommand .env
    done
    xdg-open $PROJECTURL
fi

case $PROJECTPATH in
 ".") prettyPath="$PROJECTNAME" ;;
 *) prettyPath="$PROJECTPATH/$PROJECTNAME" ;;
esac

echo "

***********************************************

You're ready to go! Remember to cd into '${green}$prettyPath${reset}' before you start editing."

# End script; disable error handling
trap : 0
